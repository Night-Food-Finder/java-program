<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nff.repository.dao.NoticeDAO">
	<!-- 알람 생성 -> user, store 공동 사용 -->
	<insert id="insertNotice" parameterType="Notice">
		insert into tb_notice (
		<choose>
			<!-- user의  단골 store 정보 업데이트시-->
			<when test="noticeCode == 1">
				user_no, notice_code, from_store_no	) values
				<foreach collection="people" item="userNo" separator="," >
					(#{userNo}, #{noticeCode}, #{fromStoreNo})
				</foreach> 
			</when>
			<!-- user의 리뷰를 다른 user가 '좋아요' 했을 때 -->
			<when test="noticeCode == 2">
				user_no, notice_code, from_user_no, from_store_no
				) values (               <!-- 다른 유저 --> <!-- 리뷰가있는 스토어 -->
				#{userNo}, #{noticeCode}, #{fromUserNo}, #{fromStoreNo}
				)
			</when>
			
			<!-- store의 가입이 승인 되었을 때 -->
			<when test="noticeCode == 3">
				store_no, notice_code
				) values (
				#{storeNo}, #{noticeCode}
				)
			</when>
			<!-- store의 단골 user가 늘어났을 때, 리뷰가 새로 등록됐을 때  -->
			<!-- noticeCode == 4, 5 -->
			<otherwise>
				store_no, notice_code, from_user_no
				) values (
				#{storeNo}, #{noticeCode}, #{fromUserNo}
				)
			</otherwise>
		</choose>
	</insert>

	<!-- 알림 리스트 -->
	<!-- 리스트 정렬할 때 확인 여부 표시해주어야한다. -->	
	<select id="selectNotice" parameterType="Notice" resultType="Notice">
		select n.* ,
               u.nick_name as from_user_name,
      		   s.store_name as from_store_name,
      		   c.notice_content as notice_content
  		  from tb_notice n
	inner join tb_notice_content c
   			on n.notice_code = c.notice_code
	left outer join tb_user u
   			on n.from_user_no = u.user_no
 	left outer join tb_store s
   			on n.from_store_no = s.store_no
		 <where>
		 	<if test="storeNo != 0">
         		n.store_no = #{storeNo}
         	</if>
         	<if test="userNo != 0">
         		n.user_no = #{userNo}
         	</if>
		 </where> 
		 order by n.reg_date desc 
		 limit 40
	</select>
	
	<!-- 알림을 사용자가 확인했을 때  안읽음(0)에서 읽음(1)으로 업데이트-->
<!-- 	<update id="readNotice" parameterType="Notice"> -->
	<update id="readNotice" parameterType="int">
		update tb_notice
  		   set status = 1
  		   
  		where notice_no = #{noticeNo}
 <!--         <where>
         	<if test="storeNo != 0">
         		store_no = #{storeNo}
         	</if>
         	<if test="userNo != 0">
         		user_no = #{userNo}
         	</if>
         </where> -->
	</update>
	
	<!-- 안읽은 알림 몇 개인지 -->
	<select id="countNewNotice" parameterType="Notice" resultType="int">
		select count(*)
		  from tb_notice
		 where
		 	<if test="storeNo != 0 and userNo == 0">
         		store_no = #{storeNo}
         	</if>
         	<if test="userNo != 0 and storeNo == 0">
         		user_no = #{userNo}
         	</if>
			and status = 0
	</select>
	
	<!-- 알림 하나 삭제 -->
	<delete id="deleteNotice" parameterType="int">
		delete
		  from tb_notice
		 where notice_no = #{noticeNo}
	</delete>
	
	<!-- 알림 모두 삭제 -->
	<delete id="deleteAllNotice" parameterType="Notice">
		delete
		  from tb_notice
		 where 
		 	<if test="storeNo != 0">
         		store_no = #{storeNo}
         	</if>
         	<if test="userNo != 0">
         		user_no = #{userNo}
         	</if>
	</delete>
	
</mapper>
   