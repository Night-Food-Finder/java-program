<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nff.repository.dao.StatDAO">

	<!-- 전체 단골 등록 수 -->
	<select id="frequentCountAll" resultType="int">
		select count(*)
		from tb_frequent_store
	</select>

	<!-- store 단골 랭킹 리스트 -->
	<select id="statFrequentStore" parameterType="Search"
		resultType="Stat">
   	 select *
    from frequent_view f
    left outer join (
		select count(store_no) as fqCount, store_no as st
		from frequent_view
		 <where>
       <include refid="statAgeFilter"/>
       </where>
		group by st
    ) freCnt
    on f.store_no = st
    group by f.store_no
    order by fqCount desc
    limit 10
	</select>
	
	<select id="statMaleFrequentStore" parameterType="Search"
		resultType="Stat">
     select *
    from frequent_view f
    left outer join (
     select count(user_no) fqCount, store_no as st
       from frequent_view
       where user_gender = 'M'
       <include refid="statAgeFilter"/>
       group by st
    ) male
      on f.store_no = st
    group by f.store_no
    order by fqCount desc
    limit 10
	</select>

	<select id="statFemaleFrequentStore" parameterType="Search"
		resultType="Stat">
  select *
    from frequent_view f
    left outer join (
     select count(user_no) fqCount, store_no as st
       from frequent_view
       where user_gender = 'F'
       <include refid="statAgeFilter"/>
       group by st
    ) female
      on f.store_no = st
    group by f.store_no
    order by fqCount desc
    limit 10
    	</select>

<!-- <insert id="insertAward" parameterType="Search">
INSERT INTO tb_award 
(user_gender, user_age, reg_date) 
VALUES (#{userGender}, #{userAge}, NOW());
</insert>

<delete id="deleteAward" parameterType="Search">
DELETE FROM tb_award 
WHERE user_gender = #{userGender} 
and user_age = #{userAge};
</delete> -->

	<!-- 연령별 필터 -->
		<sql id="statAgeFilter">
		<if test="userAge != null and userAge != ''">
		and user_age like #{userAge}
		</if>
	</sql>
	<!-- 성별 필터 -->
		<sql id="statGenderFilter">
		<if test="type != null and type != ''">
			and user_gender like '%' || #{type} || '%'
		</if>
	</sql>
	
	
	<!-- 방문자 등록 -->
	<insert id="insertVisitor" parameterType="Stat">
		insert into tb_visitor
		(visit_ip, date_time) values
		(#{visitIp}, now())
	
	</insert>

	<!-- 총 방문자, 오늘 방문자  세기 -->
	<select id="visitorList" resultType="Stat">
		select count(*) as totalVisit, 
		(select count(*) from tb_visitor where date(date_time) = curdate()) as todayVisit from tb_visitor
	</select>
	
	<!-- 날짜별 방문자 그래프 -->
	<select id="countByDate" resultType="Stat">
		 select date_time, count(*) as byDate from tb_visitor 
		 where date_time between date_add(now(), INTERVAL -1 month ) and now()
		 group by date(date_time) order by date_time

	</select>
	
	<!-- 일반 가입자 수 -->
	<select id="countJoinUser" resultType="Stat">
		select count(*) as totalUser, 
		(select count(*) from tb_user where date(join_date) =  date(now())) as todayUser from tb_user;
	</select>
	
	<!-- 가게 가입자 수 -->
	<select id="countJoinStore" resultType="Stat">
		select count(*) as totalStore, 
		(select count(*) from tb_store where date(store_join_date) =  date(now())) as todayStore from tb_store;
	</select>
	
	
</mapper>